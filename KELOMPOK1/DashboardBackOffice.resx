<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="panelMenu.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="panelDashboardJudul.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAADAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAALAAAAGwAAACwAAAAyAAAANAAA
        ADQAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAA
        ADMAAAA0AAAANAAAADIAAAApAAAAFgAAAAkAAAACAAAAAAAAAAAAAAABAAAACQAAAB4AAAByAAAA5gAA
        APUAAAD1AAAA9QAAAPUAAAD1AAAA9QAAAPUAAAD1AAAA9QAAAPUAAAD1AAAA9QAAAPUAAAD1AAAA9QAA
        APUAAAD1AAAA9QAAAPUAAAD1AAAA5wAAAH8AAAA1AAAAFwAAAAUAAAABAAAAAAAAAAEAAAADAAAACwAA
        ANA4ODj6W1tb/z09Pf8xMTH/MTEx/zExMf84NTH/Pzgx/zg1Mf8xMTH/MTEx/zExMf8xMTH/ODUx/z84
        Mf84NTH/MTEx/zExMf8xMTH/MjIy/y8vL/8fHx/4AAAA0gAAABYAAAAJAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAA12ppZ/9vaWP/cWhf/1BHPv9LRD3/REE9/1NIPf+5iD3/Ukc9/0RBPf9ORj3/TUU9/0JA
        Pf9RRz3/uYg9/1FHPf9CPz3/S0Q9/1JIPv9USkD/TkdA/0NAPv8AAADXAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADUbWhj/5yAW/+ujV7/lnRD/3hcNf9aSjT/U0Q0/7B/NP9RQzT/UkU0/4pn
        NP+GZTT/RDw0/09CNP+wfzT/T0I0/z86NP99XzX/img2/4tpN/+IaDr/SEI7/wAAANQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANNqZV//l3tT/5t8Uv+Sd1P/d1kv/0E3K/9JOiv/p3Yr/0g6
        K/9EOCv/f1wr/35cK/88NCv/Rjkr/6d2K/9GOSv/NDAr/2JKK/91Viz/gmAu/3haMf9AOjT/AAAA0wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA02VgWv9uXk7/c19K/3NgS/9zYEz/SDko/1Q7
        I/+fbiP/VDsj/0Y1I/9eQyP/aEgj/0Y1I/9TOyP/n24j/1M7I/9BMiP/RzYj/1g/I/9xTyb/Tz0q/zgz
        Lf8AAADTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADTY1xV/8STSP/Aj0T/wI9E/8KR
        Rv/CkUb/nGsg/5dmG/+XZhv/mGYb/5poG/+caBv/mWcb/5dmG/+XZhv/l2Yb/5dmG/+ZZxz/nGod/59r
        Hv+gbiL/NC0m/wAAANMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANNZVlL/WE5E/1xP
        Qf9aTT//WUw+/1xPQf9dUEL/PjEj/zAjFf8wIxX/MCMV/zAjFf8wIxX/MCMV/zAjFf8wIxX/MCMV/zAj
        Ff8yJRf/NCcZ/zAmHP8oJSH/AAAA0wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA009P
        T/9CQkL/Pz8//zw8PP87Ozv/Ozs7/z09Pf9DQ0P/Nzc3/xcXF/8RERH/ERER/xEREf8RERH/ERER/xER
        Ef8RERH/ERER/xISEv8VFRX/GBgY/xwcHP8AAADTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADTTU1N/21tbf+Kior/Wlpa/5ycnP9nZ2f/j4+P/5ycnP9kZGT/R0dH/y4uLv8WFhb/DAwM/wwM
        DP8MDAz/NTU1/3Z2dv9FRUX/fn5+/4iIiP9DQ0P/FxcX/wAAANMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAANNNTU3/a2tr/4ODg/9LS0v/lJSU/2VlZf+bm5v/lJSU/1hYWP8/Pz//Ozs7/z8/
        P/83Nzf/IyMj/xQUFP9TU1P/dHR0/0JCQv9kZGT/bW1t/zg4OP8VFRX/AAAA0wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA00VFRf83Nzf/MzMz/zExMf8wMDD/MDAw/zAwMP8wMDD/MDAw/zAw
        MP8wMDD/MTEx/zIyMv81NTX/ODg4/0BAQP8xMTH/Wlpa/zMzM/8UFBT/ExMT/xAQEP8AAADTAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADTPDw8/zAwMP8tLS3/Kioq/ykpKf8pKSn/KSkp/ykp
        Kf8pKSn/KSkp/ykpKf8pKSn/KSkp/ykpKf8pKSn/Kioq/ysrK/8tLS3/Ly8v/zMzM/82Njb/QUFB/wAA
        ANMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANMiIiL/HBwc/xsbG/8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Gxsb/xwc
        HP8iIiL/AAAA0wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAA2xcXF/8YGBj/HBwc/5GR
        kf+zs7P/u7u7/8bGxv9GRkb/JCQk/yUlJf+6urv/4ODg/+Hh4f/h4eH/TExM/yYmJv8mJib/u7u8/+Hh
        4f/h4eH/4eHh/0xMTP8AAADTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFCEhIT68PDw/6Wl
        pf8fHx//VVVV/6enp/+0tLT/wsLC/3l5ef8kJCT/JSUl/4ODg//g4OD/4eHh/+Hh4f+EhIT/JiYm/yYm
        Jv+EhIT/4eHh/+Hh4f/h4eH/hISE/wAAANMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiPf3
        9/+bm5v/0dHR/8jIyP9AQED/lZWV/7Kysv/CwsL/srKz/0NDQ/9FRUX/ZWVl/+Dg4P/h4eH/4eHh/8HB
        wv9GRkb/RkZG/2ZmZv/h4eH/4eHh/+Hh4f/BwcL/AAAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACR9vb2/87Ozv/Jycn/0dHR/729vf8HBwf4CAgI7QYGBuMDAwPZAAAAzgAAAM0AAADMAAAAzAAA
        AMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJH7+/v/1dXV/9DQ0P/Z2dn/ycnJ/1tbW/88PDz5ERER7hISEuAQEBDGERERmBER
        EWcRERE3ERERCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAiP////+pqan/5ubm/9PT0/9kZGT/jo6O/zc3N/8dHR3/Hx8f/1dX
        V/6SkpL8bm5u9UZGRugYGBjPERERoREREW4RERFBEREREQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPh4eH7/////+np6f9W1tb+5ycnP7Dw8P/RUVF/z8/
        P/80NDT/m5ub/+Dg4P/h4eH/4eHh/0xMTP8iIiL0Hh4e6CQkJN4TExPQERERrREREXoRERFIERERGAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAvAwMDZwcHB3wNDQ2XDg4Ouioq
        KtkoKCjgOzs77UlJSfjKysr/4ODg/+Hh4f/h4eH/LCws/yYmJv8mJib/bGxs/+Hh4f/FxcX+l5eX90BA
        QOQUFBTSERERVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAERERGA8PD00QEBCEERERszY2NtdxcXHqqKio+K2trf1RUVH/TExM/0JCQv+hoaH/4eHh/+Hh
        4f/h4eH/TExM/yMjI/YRERGoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQGREREUgRERGCERERshoaGtIrKyvePT097Lq6
        uv3h4eH/4eHh/+Hh4f82Njb/ICAg5REREWUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERERGBER
        EUgRERGCERERsjY2NtdxcXHqjo6O9UpKSvgfHx/VERERJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAERERGBEREUgRERGCERERshEREV4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////gAAAHwAAAAYAAAACAAAAB4AAAB/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD+AAAA/gAAAP4AAAD+AAP//gAAP/4AAAP+AA
        AB//gAAf//gAH///gB////g///////////8=
</value>
  </data>
</root>